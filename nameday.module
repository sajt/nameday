<?php
/**
 * @file
 * Show a block with actual date, name day and holiday if exists
 */

/**
 * Implements hook_menu().
 */
function nameday_menu() {
  $items = array();
  $items['admin/config/regional/nameday'] = array(
    'title' => 'Nameday',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nameday_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'nameday.admin.inc'
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function nameday_block_info() {
  $blocks['nameday'] = array(
    'info' => t("Name day"),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nameday_block_view($delta = '') {
  $nameday = _nameday_get_row();
  if (!count($nameday)) {
    return FALSE;
  }
  
  switch ($delta) {
    case 'nameday':
      $block['subject'] = t('Name day');
      $block['content'] = theme('nameday', _nameday_get_row());
      return $block;
      break;
  }
}

/**
 * Implements hook_theme().
 */
function nameday_theme() {
  return array(
    'nameday' => array(
      'arguments' => array('nameday' => NULL ),
      'template' => 'nameday',
    )
  );
}

function nameday_preprocess_nameday(&$variables, $hook) {
  if (array_key_exists(0, $variables)) {
    $variables['name'] = $variables[0]->name;
    if (variable_get('nameday_show_date', TRUE)) {
      $variables['date'] = format_date(REQUEST_TIME, variable_get('nameday_date_format', 'small'), variable_get('nameday_date_format_custom', ''));
    }
    else {
      $variables['date'] = FALSE;
    }
    if (variable_get('nameday_show_holiday', TRUE) && $variables[0]->holiday != '') {
      $variables['holiday'] =  $variables[0]->holiday;
    }
    else {
      $variables['holiday'] = FALSE;
    }
  }
}

/**
 * return the current day database row-array
 */
function _nameday_get_row() {
  global $language;
  //static $result = NULL;
  //if (!$result) {
    //setting the current timestamp with timezone
    $time = format_date(REQUEST_TIME, 'custom', 'U');
    $date = getdate($time);
    $select = db_select('nameday', 'n');
    $select->addField('n', 'name');
    $select->addField('n', 'holiday');
    $select->condition('n.month', $date["mon"]);
    $select->condition('n.day', $date["mday"]);
    $select->condition('n.language', $language->language);

    try {
      $entries = $select->execute()->fetchAll();
    } catch (Exception $e) {
      drupal_set_message( $e->getMessage());
    }

    
  //}
  return $entries;
}

/**
 *
 * Token support is early alpha.
 *
 * Implements hook_token_values().
 */
function nameday_token_values($type, $object = NULL, $options = array()) {
  $result = _nameday_get_row();
  $tokens['nameday'] = $result['name'];
  $tokens['holiday'] = $result['holiday'];
  return $tokens;
}

/**
 * Implements hook_token_list().
 */
function nameday_token_list($type = 'all') {
  $tokens[$type]['nameday'] = "Current nameday";
  $tokens[$type]['holiday'] = "Current holiday if any";
  return $tokens;
}
